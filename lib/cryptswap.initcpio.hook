#!/usr/bin/env sh
# shellcheck disable=SC2039,SC2154
#
# WARNING: This script is parsed by ash in busybox at boot time, not bash!
# http://linux.die.net/man/1/ash
# https://wiki.ubuntu.com/DashAsBinSh
# http://www.jpsdomain.org/public/2008-JP_bash_vs_dash.pdf
#

run_hook() {
  local swap_dev swap_dev_resolved swap_mapper_name swap_mapper_dev \
    crypt_opt crypt_options crypt_args
  local name="cryptswap"

  if [ -z "${cryptswap:-}" ]; then
    err "$name: no device specified for encrypted swap partition"
    return 1
  fi

  IFS=: read -r swap_dev swap_mapper_name crypt_options <<EOF
$cryptswap
EOF
  swap_mapper_dev="/dev/mapper/$swap_mapper_name"

  if swap_dev_resolved="$(resolve_device "$swap_dev" "$rootdelay")"; then
    msg "$name: swap_dev resolves to '$swap_dev_resolved'"
  else
    err "$name: could not resolve device '$swap_dev'"
    return 1
  fi

  # This may happen if third party hooks do the crypt setup
  if [ -b "$swap_mapper_dev" ]; then
    echo "Device '$swap_mapper_dev' already exists, not doing any crypt setup"
    return 0
  fi

  for crypt_opt in ${crypt_options//,/ }; do
    case "$crypt_opt" in
      allow-discards)
        crypt_args="$crypt_args --allow-discards"
        ;;
      *)
        err "$name: encryption option '$crypt_opt' not known, ignoring"
        ;;
    esac
  done

  # Loop until we get a good password
  local passwd
  while true; do
    echo -n "Enter passphrase for '$swap_mapper_name': "
    read -r -s passwd

    # shellcheck disable=SC2086
    echo "$passwd" \
      | cryptsetup open $crypt_args "$swap_dev_resolved" "$swap_mapper_name" $CSQUIET
    # shellcheck disable=SC2181
    if [ $? -eq 0 ]; then
      unset passwd
      echo
      break
    fi
  done

  if [ ! -e "$swap_mapper_dev" ]; then
    err "$name: password succeeded but '$swap_mapper_dev' creation failed, aborting"
    return 1
  fi
}
